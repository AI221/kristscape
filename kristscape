local version = "0.5.0"

local hardware = "Computer"
if turtle then hardware = "Turtle" end
if pocket then hardware = "Pocket Computer" end
if term.isColor() then hardware = "Advanced "..hardware end
if command then hardware = "Command Computer" end

local t = {}
local tabs = 0
local activetab = 1
local baredit = ""

local coloxrs = colours or colors
coloxrs.grxy = coloxrs.grey or coloxrs.gray
coloxrs.lightGrxy = coloxrs.lightGray or coloxrs.lightGrey

local w, h = term.getSize()
local xy, tc, bg = term.setCursorPos, term.setTextColor, term.setBackgroundColor

local server = {}
server["dns"] = "http://krist.ceriat.net/?a="
local headers = {
	["User-Agent"] = "KristScape/"..version.." ("..hardware.."; "..os.version().."; #"..os.getComputerID().."; en-us)",
	["X-Example"] = "true",
	["X-Magic"] = "plugh",
}

local function drawtabs()
	local tw = math.min(14,math.floor((w-math.min(9,tabs)-4)/math.min(9,tabs)))
	xy(2,1)
	bg(coloxrs.black)
	term.clearLine()
	for i = 1, tabs do
		xy((tw+1)*(i-1)+2,1)
		if i == activetab then
			bg(coloxrs.lightGrxy)
			tc(coloxrs.grxy)
		else
			bg(coloxrs.grxy)
			tc(coloxrs.lightGrxy)
		end
		local tt = t[i]["title"]:sub(1,tw-3)
		term.write(" "..tt..string.rep(" ",tw-3-#tt))
		tc(coloxrs.red)
		term.write(" \215")
	end
	if tabs < 10 then
		xy(2+(tw+1)*tabs,1)
		bg(coloxrs.grxy)
		tc(coloxrs.lightGrxy)
		term.write(" + ")
	end
end
local function setstatus(status)
	bg(coloxrs.lightGrxy)
	tc(coloxrs.black)
	xy(1,h)
	term.write(tostring(status)..string.rep(" ",25-#tostring(status)))
end
local function seturl(url,v)
	bg(coloxrs.white)
	tc(coloxrs.black)
	xy(3,2)
	if v == nil or v == true or v == false then
		term.write(url)
	elseif v == "#SEL" then
		bg(coloxrs.cyan)
		tc(coloxrs.white)
		term.write(url:sub(-w-5))
	else
		
	end
	bg(coloxrs.white)
	if #url < w - 4 then
		term.write(string.rep(" ",w-4-#url))
	end
	if v == true and url:find(".kst") then
		tc(coloxrs.green)
		xy(10,2)
		term.write(url:sub(8,url:find(".kst")+3))
	end
end

bg(coloxrs.white)
term.clear()

local function log(file,text)
	--[[
	local LOG = fs.open("kst/logs/"..file..".log","a")
	LOG.writeLine(text)
	LOG.close()
	--]]
end

local tab = {}
tab["open"] = function(url)
	tabs = tabs + 1
	tab.reset(tabs)
	tab.switch(tabs)
	if url then
		t[tabs]["url"] = url
		seturl(url)
	end
	drawtabs()
end
tab["reset"] = function(i)
	t[i] = {}
	t[i]["title"] = "New Tab"
	t[i]["url"] = ""
	t[i]["certified"] = false
	t[i]["momentum"] = 100000
end
tab["switch"] = function(n)
	activetab = n
	seturl(t[n]["url"],t[n]["certified"])
	drawtabs()
end
tab["load"] = function(n)
	
end
tab["close"] = function(n)
	for i=n+1,tabs do
		t[i-1] = t[i]
	end
	tabs = tabs - 1
	if tabs == 0 then
		running = false
	else
		if activetab == n then
			tab.switch(math.min(n,tabs))
		elseif activetab > n then
			tab.switch(activetab - 1)
		end
	end
	drawtabs()
end

for i=1,10 do
	tab.reset(i)
end

local function CALL(server)
	http.request(server,nil,headers)
end

local function drawhud()
	xy(3,2)
	bg(coloxrs.lightGrxy)
	term.clearLine()
	bg(coloxrs.white)
	term.write(string.rep(" ",w-4))
	bg(coloxrs.lightGrxy)
	tc(coloxrs.white)
	term.write("  \171")
	xy(3,3)
	bg(coloxrs.lightGrxy)
	term.clearLine()
	xy(26,h)
	term.clearLine()
	tc(coloxrs.grxy)
	term.write("| ")
	bg(coloxrs.lightBlue)
	tc(coloxrs.blue)
	term.write(" \17 ")
	xy(32,h)
	term.write(" \16 ")
	xy(36,h)
	term.write(" R ")
	xy(40,h)
	term.write(" H ")
	xy(44,h)
	term.write(" Menu ")
end

drawtabs()
drawhud()
xy(4,4)

local loading = false
local running = true
CALL(server["dns"].."x#at"..tostring(activetab-1))
setstatus("Polling DNS...")
tab.open("http://kst.kst/")
while tabs > 0 do
	local ev, p1, p2, p3, p4 = os.pullEvent()
	if ev == "http_success" then
		setstatus("Done")
		log("http",p2:getResponseCode().." "..p1)
		if p1:sub(1,#server["dns"]) == server["dns"] then
			local targettab = tonumber(p1:sub(#p1,#p1))+1
			local response = p2:readAll()
			if response:sub(1,1) == "$" then
				setstatus("Forwarding...")
				CALL(server["dns"]..response:sub(2):gsub(".kst","").."#at"..tostring(targettab-1))
			else
				setstatus("Downloading page...")
				CALL("http://"..response)
			end
		else
			
		end
		
		p2:close()
	elseif ev == "http_failure" then
		-- rip ceriat 2007-2016
	elseif ev == "mouse_click" then
		baredit = ""
		seturl(t[activetab]["url"],t[activetab]["certified"])
		term.setCursorBlink(false)
		if p3 == 1 then -- Tabs
			local tw = math.min(14,math.floor((w-math.min(9,tabs)-4)/math.min(9,tabs)))
			p2 = p2 - 1
			--if tw + 1 % p2 ~= 0 or math.ceil(p2/(tw+1)) ~= p2/(tw+1) then
			if math.ceil(p2/(tw+1)) ~= p2/(tw+1) then
				if tabs < 10 and math.ceil(p2/(tw+1)) == tabs + 1 and p2%(tw+1) <= 3 then
					tab.open()
				else
					if tw == p2%(tw+1) then
						tab.close(math.ceil(p2/(tw+1)))
					elseif math.ceil(p2/(tw+1)) <= tabs then
						tab.switch(math.ceil(p2/(tw+1)))
					end
				end
			end
		elseif p3 == 2 and p2 > 2 and p2 < w - 2 then -- Address bar
			if baredit == "" then
				baredit = "#SEL"
				term.setCursorBlink(true)
				seturl(t[activetab]["url"],baredit)
			end
		elseif p3 == h then -- Status bar
			
		elseif p2 == w then -- Scroll bar
			
		end
	end
	if #baredit > 0 then
		local bl = #baredit
		if baredit == "#SEL" then bl = t[activetab]["url"]:len() end
		xy(3+math.min(bl,w-7),2)
		os.sleep()
	end
end
bg(coloxrs.black)
term.clear()
xy(1,1)
